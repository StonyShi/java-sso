<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean class="com.stony.sso.server.ServerInfoHold" id="serverInfoHold">
        <property name="appKey" value="${server.app.key}"/>
        <property name="appSecret" value="${server.app.secret}"/>
    </bean>

    <bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehcacheManager"/>
    </bean>
    <!--ehcache-->
    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache/ehcache.xml"/>
    </bean>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="com.stony.sso.commons.security.cache.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>


    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.stony.sso.commons.security.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.stony.sso.server.realm.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="false"/>
        <property name="appKey" value="${server.app.key}"/>
    </bean>



    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
        <property name="domain" value=""/>
        <property name="path" value="/"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
        <property name="domain" value=""/>
        <property name="path" value="/"/>
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO -->
    <!--<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
        <!--<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>-->
        <!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
    <!--</bean>-->

    <!-- 会话验证调度器 -->
    <!--<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">-->
        <!--<property name="sessionValidationInterval" value="1800000"/>-->
        <!--<property name="sessionManager" ref="sessionManager"/>-->
    <!--</bean>-->

    <!-- jedis session cache -->
    <bean id="sessionCache" class="com.stony.sso.cache.session.support.JedisSessionCache">
        <constructor-arg index="0" ref="jedisTemplate"/>
    </bean>
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="com.stony.sso.commons.security.session.SecuritySessionDAO">
        <!--<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>-->
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        <property name="sessionCache" ref="sessionCache"/>
        <property name="timeOut" value="86400"/> <!-- 会话超时 秒seconds -->
        <property name="appKey" value="${server.app.key}"/>
    </bean>
        <!--<bean id="sessionDAO" class="ServerSessionDAO" >-->
            <!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
            <!--<property name="permissionService" ref="permissionService"/>-->
            <!--<property name="appKey" value="${server.app.key}"/>-->
        <!--</bean>-->
    <!--<bean id="sessionValidationScheduler"-->
          <!--class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">-->
        <!--<property name="interval" value="3600000"/>-->
        <!--<property name="sessionManager" ref="sessionManager"/>-->
    <!--</bean>-->

    <!-- 会话管理器 org.apache.shiro.web.session.mgt.DefaultWebSessionManager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    <!--<bean id="sessionManager" class="ServerWebSessionManager">-->
        <property name="globalSessionTimeout" value="1800000"/>  <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="sessionValidationInterval" value="1800000" /> <!-- 会话验证器调度时间 -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>-->
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>


    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="com.stony.sso.server.filter.ServerFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="remember"/>
        <property name="loginUrl" value="/login"/>
    </bean>
    <!-- 登陆验证码过滤器 /login = verification,authc -->
    <!--<bean id="verificationFilter" class="VerificationFilter">-->
        <!--<property name="usernameParam" value="username"/>-->
        <!--<property name="verifyParam" value="verifyCode"/>-->
        <!--<property name="loginUrl" value="/login"/>-->
        <!--<property name="verificationService" ref="verificationService"/>-->
    <!--</bean>-->

    <!-- 基于Form表单的身份验证过滤器 -->
    <!--<bean id="formAuthFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">-->
        <!--<property name="usernameParam" value="username"/>-->
        <!--<property name="passwordParam" value="password"/>-->
        <!--<property name="rememberMeParam" value="rememberMe"/>-->
        <!--<property name="loginUrl" value="/login"/>-->
    <!--</bean>-->

    <!--<bean id="sysUserFilter" class="SysUserFilter"/>-->
    <bean id="serverLogoutFilter" class="com.stony.sso.server.filter.ServerLogoutFilter"/>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/"/>
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <!--<entry key="sysUser" value-ref="sysUserFilter"/>-->
                <!--<entry key="verification" value-ref="verificationFilter" />-->
            </util:map>
        </property>
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--/remoteService=anon-->
                <!--/login=authc-->
                <!--/logout=logout-->
                <!--/authenticated=authc-->
                <!--/**=user-->
            <!--</value>-->
        <!--</property>-->
        <property name="filterChainDefinitionMap" ref="definitionSectionMetaSource" />
    </bean>
    <!-- 登陆 验证码过滤 /login=verification,authc -->
    <bean id="definitionSectionMetaSource"
          class="com.stony.sso.server.chain.ChainDefinitionSectionMetaSource">
        <property name="filterChainDefinitions">
            <value>
                /remoteService=anon
                /permission=anon
                /oauth/authorize=anon
                /oauth/access/token=anon
                /oauth/info=anon
                /oauth/permission=anon
                /unauthorized=anon
                /static/**=anon
                /login=authc
                /logout=logout
                /authenticated=authc
            </value>
        </property>
        <property name="lastFilterChainDefinitions">
            <props>
                <prop key="/**">authc</prop>
            </props>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>